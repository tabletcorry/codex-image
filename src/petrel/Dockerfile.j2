FROM debian:latest

# Prevent any interactive APT prompts
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        vim ripgrep \
        build-essential curl file git ca-certificates procps && \
    rm -rf /var/lib/apt/lists/*

# RUN curl -LsSf https://astral.sh/uv/install.sh | sh

RUN groupadd --gid 1000 linuxbrew && \
    useradd --uid 1000 --gid linuxbrew --create-home --shell /bin/bash linuxbrew
USER linuxbrew
WORKDIR /home/linuxbrew

# Install Homebrew (non-interactive)
ENV NONINTERACTIVE=1
RUN /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# Put brew on PATH for subsequent layers
ENV PATH="/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:${PATH}"

ARG CODEX_VERSION="{{ codex_version }}"

RUN brew install codex uv && \
    brew cleanup --prune=all --scrub && \
    rm -rf "$(brew --cache)"

USER root
RUN echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' \
      >>  /home/linuxbrew/.profile

ENV UV_PROJECT_ENVIRONMENT=/home/linuxbrew/.uv_venv
RUN echo 'export UV_PROJECT_ENVIRONMENT=/home/linuxbrew/.uv_venv' \
      >>  /home/linuxbrew/.profile

ENV UV_CACHE_DIR=/home/linuxbrew/.uv_cache/uv
RUN echo 'export UV_CACHE_DIR=/home/linuxbrew/.uv_cache/uv' \
      >>  /home/linuxbrew/.profile

ENV UV_LINK_MODE=copy
RUN echo 'export UV_LINK_MODE=copy' \
      >>  /home/linuxbrew/.profile  \

ENV UV_PYTHON_CACHE_DIR=/home/linuxbrew/.uv_cache/python
RUN echo 'export UV_PYTHON_CACHE_DIR=/home/linuxbrew/.uv_cache/python' \
      >>  /home/linuxbrew/.profile

USER linuxbrew
WORKDIR /home/linuxbrew/repo

ENV DEBIAN_FRONTEND=
